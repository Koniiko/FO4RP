#ifndef DEFIB
#define DEFIB

#include "_utils.fos"
#include "_ltp.fos"

void _itemInit( Item& item, bool FirstTime )
{
    item.SetEvent( ITEM_EVENT_USE, "_reanimate" );
}

bool _reanimate( Item& item, Critter& cr, Critter@ onCritter, Item@ onItem, Scenery@ onScenery )
{
	if( onCritter.ParamBase[ CR_DEATH_STAGE ] >= 50)
	{
		cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_TARGET_CRIT_DEATH );
		return false;
	}

    if( cr.Skill[ SK_DOCTOR ] + cr.Skill[ SK_FIRST_AID ] + cr.Skill[ SK_SCIENCE ] < 200 )
	{
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_LOW_DOCTOR );
        return true;
	}
	
    if( onCritter.IsDead() )
	{
		if( cr.CountItem( PID_SMALL_ENERGY_CELL ) >= 3 )
		{
			cr.DeleteItem( PID_SMALL_ENERGY_CELL, 3 );
			cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_RECHARGE_DEFIB );
		}
		else
		{
			cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_REQUIRE_CELLS );
			return true;
		}

		if( !ltp_defib_inited )
		{
            ltp_defib_init();
		}
		
        uint16 rndTime = 15000 - ( cr.Skill[ SK_DOCTOR ] * 40 );
        StartProcess( cr, LTP_DEFIB, onCritter.Id, 0, 0, rndTime );
        cr.SayMsg( SAY_EMOTE, TEXTMSG_GAME, STR_EMOTE_RECHARGE_DEFIB );
        return true;
    }
    return false;
}

bool ltp_defib_inited = false;

void ltp_defib_init()
{
    LTPREG( LTP_DEFIB, process_defib )
    ltp_defib_inited = true;
}

uint process_defib( Critter@ cr, int& param0, int& param1, int& param2 )
{
    LTPROCESSD( LTP_DEFIB )

    Critter @ onCritter = GetCritter( param0 );
    if( @onCritter == null )
	{
        return 0;
	}
	
    if( onCritter.Anim2Dead <= ANIM2_DEAD_BACK && onCritter.Stat[ST_MAX_LIFE] > 50 )
	{
        Map@ map = onCritter.GetMap();
		for( int dx = -1; dx < 2; dx++ )
		{
			for( int dy = -1; dy < 2; dy++ )
			{
				if( map.IsHexPassed( onCritter.HexX + dx, onCritter.HexY + dy ) )
				{
					onCritter.TransitToHex( onCritter.HexX + dx, onCritter.HexY + dy, onCritter.Dir );
					break;
				}
			}
		}
				
		onCritter.ToLife();
		onCritter.ToKnockout( KNOCKOUT_ANIM2_DEFAULT( true ), 1000, onCritter.HexX, onCritter.HexY );

		onCritter.StatBase[ST_MAX_LIFE] -= 10;
	
		cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_APLIED_DEFIB );
        if( onCritter.IsNpc() )
		{
            onCritter.EraseEnemyFromStack( cr.Id );
		}
        return 0;
    }
	else
	{
        cr.SayMsg( SAY_NETMSG, TEXTMSG_GAME, STR_TARGET_CRIT_DEATH );
        return 0;
    }
}
#endif //DEFIB